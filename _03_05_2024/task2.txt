


Пользователь вводит неограниченное количество слов.
 Ввод завершается, когда
пользователь вводит команду stop.
Программа должна вывести введённые слова в следующем порядке:
 первое слово, последнее слово, второе слово, предпоследнее слово и т.д.

 import java.util.*;

 public class Main {
     public static void main(String[] args) {
         Scanner scanner = new Scanner(System.in);
         List<String> words = new ArrayList<>();

         System.out.println("Введите слова (для завершения введите 'stop'):");

         while (true) {
             String word = scanner.nextLine();
             if (word.equalsIgnoreCase("stop")) {
                 break;
             }
             words.add(word);
         }

         int start = 0;
         int end = words.size() - 1;

         System.out.println("Введенные слова в указанном порядке:");

         while (start <= end) {
             System.out.println(words.get(start++));
             if (start <= end) {
                 System.out.println(words.get(end--));
             }
         }
     }
 }

1. `Deque<String> word = new LinkedList<>();` - Создает двустороннюю очередь для хранения слов.

2. `Scanner scanner = new Scanner(System.in);` - Создает объект Scanner для чтения ввода пользователя.

3. `String message = " ";` - Инициализирует переменную `message` пробелом.

4. `while (!message.equals("stop")) {...}` - Цикл продолжается, пока пользователь не введет 'stop'.
 В каждой итерации цикла пользователь вводит новое слово, которое добавляется в очередь.

5. `while (!word.isEmpty()) {...}` - После того, как пользователь ввел 'stop',
программа начинает выводить слова. В каждой итерации цикла сначала удаляется и
выводится первое слово из очереди, затем, если очередь еще не пуста, удаляется и выводится последнее слово.

Таким образом, эта программа позволяет пользователю вводить слова и затем выводит их в указанном порядке.
Это достигается с помощью двусторонней очереди, которая позволяет удалять элементы как с начала, так и с конца очереди.